#############################################################################
# Makefile for building: libdxfrw.a

#############################################################################

####### Compiler, tools and options

INCLUDEPATH   = /usr/local/include/libdxfrw
LIBPATH       = /usr/local/lib
VERSION       = 0.1.0

CC            = gcc
CXX           = g++
# DEFINES       = -DDRW_DBG
CFLAGS        = -m64 -pipe -g -Wall -W -fPIC -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -fPIC -D_REENTRANT $(DEFINES)
INCPATH       = -I./src -I/usr/include
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = bzip2 -9z
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

DESTDIR       = ./
TARGET        = libdxfrw.a

####### Files

SOURCES       = src/libdxfrw.cpp \
		src/drw_entities.cpp \
		src/dxfreader.cpp \
		src/dxfwriter.cpp 
OBJECTS       = obj/libdxfrw.o \
		obj/drw_entities.o \
		obj/dxfreader.o \
		obj/dxfwriter.o

INSTHEADERS   = src/libdxfrw.h \
		src/drw_entities.h \
		src/drw_interface.h

INTERNALH     = src/dxfreader.h \
		src/dxfwriter.h

DISTFILES     = AUTHORS \
		COPYING \
		NEWS \
		README \
		TODO \
		Makefile.linux


####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: intermediate $(TARGET) 

staticlib: intermediate $(TARGET)

$(TARGET):  $(OBJECTS) 
	@$(CHK_DIR_EXISTS) obj/ || $(MKDIR) obj/ 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


clean: 
	-$(DEL_FILE) $(TARGET)
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core
	@test ! -d obj || $(DEL_DIR) obj


dist: 
	@$(CHK_DIR_EXISTS) libdxfrw$(VERSION) || $(MKDIR) libdxfrw$(VERSION) 
	$(COPY_FILE) --parents $(SOURCES) $(INSTHEADERS) $(INTERNALH) $(DISTFILES) libdxfrw$(VERSION)/ && (cd `dirname libdxfrw$(VERSION)` && $(TAR) libdxfrw$(VERSION).tar libdxfrw$(VERSION) && $(COMPRESS) libdxfrw$(VERSION).tar) && $(DEL_FILE) -r libdxfrw$(VERSION)

#	$(COPY_FILE) --parents $(SOURCES) $(INSTHEADERS) $(INTERNALH) $(DISTFILES) dxfrw0.0.1/ && (cd `dirname dxfrw0.0.1` && $(TAR) dxfrw0.0.1.tar dxfrw0.0.1 && $(COMPRESS) dxfrw0.0.1.tar) && $(MOVE) `dirname obj/dxfrw0.0.1`/dxfrw0.0.1.tar.bz2 . && $(DEL_FILE) -r obj/dxfrw0.0.1

####### Compile

intermediate: 
	@$(CHK_DIR_EXISTS) obj || $(MKDIR) obj 

obj/libdxfrw.o: src/libdxfrw.cpp src/libdxfrw.h \
		src/drw_entities.h \
		src/drw_interface.h \
		src/dxfreader.h \
		src/dxfwriter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/libdxfrw.o src/libdxfrw.cpp

obj/drw_entities.o: src/drw_entities.cpp src/drw_entities.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/drw_entities.o src/drw_entities.cpp

obj/dxfreader.o: src/dxfreader.cpp src/dxfreader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/dxfreader.o src/dxfreader.cpp

obj/dxfwriter.o: src/dxfwriter.cpp src/dxfwriter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/dxfwriter.o src/dxfwriter.cpp

####### Install

install: all
	@$(CHK_DIR_EXISTS) $(INCLUDEPATH) || $(MKDIR) $(INCLUDEPATH)
	$(COPY_FILE) $(TARGET) $(LIBPATH)/$(TARGET) && $(COPY_FILE) $(INSTHEADERS) $(INCLUDEPATH)

uninstall:   FORCE
	$(DEL_FILE) $(LIBPATH)/$(TARGET) && $(DEL_FILE) $(INCLUDEPATH)/libdxfrw.h && $(DEL_FILE) $(INCLUDEPATH)/drw_entities.h && $(DEL_FILE) $(INCLUDEPATH)/drw_interface.h && $(DEL_DIR) $(INCLUDEPATH)

FORCE:

